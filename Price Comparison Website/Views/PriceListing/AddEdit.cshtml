@model PriceListing 

@{
    var product = ViewBag.Product as Product;
    ViewBag.Title = $"{ViewBag.Operation} Listing";
}

@if (product == null)
{
    <div class="alert alert-danger">
        Product information not available.
        <a asp-controller="Home" asp-action="Index" class="btn btn-primary">Return Home</a>
    </div>
}
else
{
    <h1>@ViewBag.Operation @product.Name Listing</h1>

    <form asp-action="AddEdit" asp-controller="PriceListing" method="post" enctype="multipart/form-data">
        <input type="hidden" asp-for="PriceListingId" />
        <input type="hidden" asp-for="ProductId" />
        <input type="hidden" asp-for="DateListed" />

        <div class="form-group">
            <label asp-for="PurchaseUrl"></label>
            <input asp-for="PurchaseUrl" class="form-control" id="PurchaseUrl" />
            <span asp-validation-for="PurchaseUrl" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Price"></label>
            <input asp-for="Price" class="form-control" id="Price" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>

        <div class="form-group">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="isDiscounted" name="IsDiscounted" @(Model.DiscountedPrice != Model.Price ? "checked" : "") />
                <label class="form-check-label" for="isDiscounted">Is Discounted</label>
            </div>
        </div>

        <div class="form-group" id="discountedPriceGroup" style="display: @(Model.DiscountedPrice != Model.Price ? "block" : "none")">
            <label for="DiscountedPrice">Discounted Price</label>
            <input class="form-control" id="DiscountedPrice" name="DiscountedPrice" value="@Model.DiscountedPrice" />
            <span asp-validation-for="DiscountedPrice" class="text-danger"></span>
        </div>

        <div class="row">
            <h4 class="mb-3">Select a Vendor</h4>
            @for (int i = 0; i < ViewBag.Vendors.Count; i++)
            {
                var vendor = ViewBag.Vendors[i];
                var isChecked = Model.VendorId == vendor.VendorId;
                if (i % 3 == 0)
                {
                    @:<div class="row mb-2">
                }
                <div class="col-md-4">
                    <div class="form-check">
                        <input type="radio" class="form-check-input" id="vendor-@vendor.VendorId" name="VendorId" value="@vendor.VendorId" @(isChecked ? "checked" : "") />
                        <label class="form-check-label" for="vendor-@vendor.VendorId">
                            @vendor.Name
                        </label>
                    </div>
                </div>
                if ((i + 1) % 3 == 0 || i == ViewBag.Vendors.Count - 1)
                {
                    @:</div>
                }
            }
        </div>

        <button type="submit" class="btn btn-primary">Save Changes</button>
    </form>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(() => {
                initializeFormValidation();
            }, 100);
        });

        function initializeFormValidation() {
            // Get form elements
            const form = document.querySelector('form');
            const isDiscountedCheckbox = document.getElementById('isDiscounted');
            const discountedPriceGroup = document.getElementById('discountedPriceGroup');
            const discountedPriceInput = document.getElementById('DiscountedPrice');
            const originalPriceInput = document.getElementById('Price');
            const submitButton = form.querySelector('button[type="submit"]');

            // Initialize discounted price field based on checkbox state
            if (isDiscountedCheckbox.checked) {
                discountedPriceGroup.style.display = 'block';
            }

            function showError(element, message) {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'text-danger validation-message';
                errorDiv.textContent = message;
                element.parentNode.appendChild(errorDiv);
            }

            // Handle checkbox change
            isDiscountedCheckbox.addEventListener('change', function() {
                if (this.checked) {
                    discountedPriceGroup.style.display = 'block';
                    discountedPriceInput.value = '';
                } else {
                    discountedPriceGroup.style.display = 'none';
                    discountedPriceInput.value = originalPriceInput.value;
                    discountedPriceGroup.querySelectorAll('.validation-message').forEach(el => el.remove());
                }
            });

            // Form submission
            form.addEventListener('submit', function(e) {
                let isValid = true;

                // Clear previous errors
                document.querySelectorAll('.validation-message').forEach(el => el.remove());

                if (!validateSelection('VendorId', 'Please select a vendor')) {
                    isValid = false;
                }

                if (!isValid) {
                    e.preventDefault();
                }
            });
        }
    </script>
}
