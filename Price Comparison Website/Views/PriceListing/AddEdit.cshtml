@model PriceListing 

@{
    var product = ViewBag.Product as Product;
    ViewBag.Title = $"{ViewBag.Operation} Listing";
}

@if (product == null)
{
    <div class="alert alert-danger">
        Product information not available.
        <a asp-controller="Home" asp-action="Index" class="btn btn-primary">Return Home</a>
    </div>
}
else
{
    <h1>@ViewBag.Operation @product.Name Listing</h1>

    <form asp-action="AddEdit" asp-controller="PriceListing" method="post" enctype="multipart/form-data">
        <input type="hidden" asp-for="PriceListingId" />
        <input type="hidden" asp-for="ProductId" />
        <input type="hidden" asp-for="DateListed" />

        <div class="form-group">
            <label asp-for="PurchaseUrl"></label>
            <input asp-for="PurchaseUrl" class="form-control" id="PurchaseUrl" />
            <span asp-validation-for="PurchaseUrl" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Price"></label>
            <input asp-for="Price" class="form-control" id="Price" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>

        <div class="form-group">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="isDiscounted" name="IsDiscounted" @(Model.DiscountedPrice != Model.Price ? "checked" : "") />
                <label class="form-check-label" for="isDiscounted">Is Discounted</label>
            </div>
        </div>

        <div class="form-group" id="discountedPriceGroup" style="display: @(Model.DiscountedPrice != Model.Price ? "block" : "none")">
            <label for="DiscountedPrice">Discounted Price</label>
            <input class="form-control" id="DiscountedPrice" name="DiscountedPrice" value="@Model.DiscountedPrice" />
            <span asp-validation-for="DiscountedPrice" class="text-danger"></span>
        </div>

        <div class="row">
            <h4 class="mb-3">Select a Vendor</h4>
            <div class="form-group">
                @for (int i = 0; i < ViewBag.Vendors.Count; i++)
                {
                    var vendor = ViewBag.Vendors[i];
                    var isChecked = Model.VendorId == vendor.VendorId;
                    if (i % 3 == 0)
                    {
                        @:<div class="row mb-2">
                    }
                    <div class="col-md-4">
                        <div class="form-check">
                            <input type="radio" 
                                   class="form-check-input" 
                                   id="vendor-@vendor.VendorId" 
                                   name="VendorId" 
                                   value="@vendor.VendorId" 
                                   @(isChecked ? "checked" : "") />
                            <label class="form-check-label" for="vendor-@vendor.VendorId">
                                @vendor.Name
                            </label>
                        </div>
                    </div>
                    if ((i + 1) % 3 == 0 || i == ViewBag.Vendors.Count - 1)
                    {
                        @:</div>
                    }
                }
                <span asp-validation-for="VendorId" class="text-danger"></span>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Save Changes</button>
    </form>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            const $form = $('form');
            const $isDiscountedCheckbox = $('#isDiscounted');
            const $discountedPriceGroup = $('#discountedPriceGroup');
            const $discountedPriceInput = $('#DiscountedPrice');
            const $priceInput = $('#Price');

            $isDiscountedCheckbox.change(function() {
                $discountedPriceGroup.toggle(this.checked);
                if (!this.checked) {
                    $discountedPriceInput.val($priceInput.val());
                }
            });

            // Initialize form validation with price checks
            initializeFormValidation('form');

            // Additional validation for discounted price
            $discountedPriceInput.on('change', function() {
                try {
                    validatePrice($priceInput.val(), $(this).val());
                    $(this).siblings('.text-danger').text('');
                } catch (error) {
                    $(this).siblings('.text-danger').text(error.message);
                }
            });
        });
    </script>
}
